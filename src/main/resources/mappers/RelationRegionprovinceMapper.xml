<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daimler.aftersales.iMappers.RelationRegionprovinceMapper">
  <resultMap id="BaseResultMap" type="com.daimler.aftersales.entity.RelationRegionprovince">
    <id column="RelationID" jdbcType="INTEGER" property="relationid" />
    <result column="ProvinceID" jdbcType="INTEGER" property="provinceid" />
    <result column="RegionID" jdbcType="INTEGER" property="regionid" />
  </resultMap>
  <delete id="truncate">
    DELETE  from Relation_RegionProvince
  </delete>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RelationID, ProvinceID, RegionID
  </sql>
  <select id="selectByExample" parameterType="com.daimler.aftersales.entity.RelationRegionprovinceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Relation_RegionProvince
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Relation_RegionProvince
    where RelationID = #{relationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Relation_RegionProvince
    where RelationID = #{relationid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.daimler.aftersales.entity.RelationRegionprovinceExample">
    delete from Relation_RegionProvince
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.daimler.aftersales.entity.RelationRegionprovince">
    insert into Relation_RegionProvince (RelationID, ProvinceID, RegionID
      )
    values (#{relationid,jdbcType=INTEGER}, #{provinceid,jdbcType=INTEGER}, #{regionid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daimler.aftersales.entity.RelationRegionprovince">
    insert into Relation_RegionProvince
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationid != null">
        RelationID,
      </if>
      <if test="provinceid != null">
        ProvinceID,
      </if>
      <if test="regionid != null">
        RegionID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationid != null">
        #{relationid,jdbcType=INTEGER},
      </if>
      <if test="provinceid != null">
        #{provinceid,jdbcType=INTEGER},
      </if>
      <if test="regionid != null">
        #{regionid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.daimler.aftersales.entity.RelationRegionprovinceExample" resultType="java.lang.Integer">
    select count(*) from Relation_RegionProvince
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Relation_RegionProvince
    <set>
      <if test="record.relationid != null">
        RelationID = #{record.relationid,jdbcType=INTEGER},
      </if>
      <if test="record.provinceid != null">
        ProvinceID = #{record.provinceid,jdbcType=INTEGER},
      </if>
      <if test="record.regionid != null">
        RegionID = #{record.regionid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Relation_RegionProvince
    set RelationID = #{record.relationid,jdbcType=INTEGER},
      ProvinceID = #{record.provinceid,jdbcType=INTEGER},
      RegionID = #{record.regionid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daimler.aftersales.entity.RelationRegionprovince">
    update Relation_RegionProvince
    <set>
      <if test="provinceid != null">
        ProvinceID = #{provinceid,jdbcType=INTEGER},
      </if>
      <if test="regionid != null">
        RegionID = #{regionid,jdbcType=INTEGER},
      </if>
    </set>
    where RelationID = #{relationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daimler.aftersales.entity.RelationRegionprovince">
    update Relation_RegionProvince
    set ProvinceID = #{provinceid,jdbcType=INTEGER},
      RegionID = #{regionid,jdbcType=INTEGER}
    where RelationID = #{relationid,jdbcType=INTEGER}
  </update>
</mapper>